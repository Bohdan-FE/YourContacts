{"version":3,"file":"static/js/784.56fd585f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Fillter.jsx","pages/contacts.jsx","../node_modules/@mui/icons-material/Add.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Form = styled.form`\n  border: 2px solid black;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  border-radius: 4px;\n  input {\n    display: flex;\n    justify-content: end;\n    border-radius: 4px;\n    margin-top: 8px;\n    padding: 4px;\n  }\n  input:focus {\n    outline: none;\n    border: 2px solid #5e5eba;\n  }\n  button {\n    width: 100px;\n    padding: 4px;\n    cursor: pointer;\n  }\n`;\n","import { useState } from 'react';\nimport { Form } from './ContactForm.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/thunk';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(state => state.contacts);\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContactThunk({ name, number }));\n    reset();\n    e.currentTarget.reset();\n  };\n\n  const handleChange = ({ target }) => {\n    if (target.name === 'name') {\n      setName(target.value);\n    }\n    if (target.name === 'number') {\n      setNumber(target.value);\n    }\n  };\n\n  return (\n    <Form action=\"submit\" onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button>Add contact</button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n};\n","import { styled } from 'styled-components';\n\nexport const Item = styled.li`\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  p {\n    font-size: 24px;\n    line-height: 0.6;\n    font-weight: 600;\n    span {\n      padding-left: 6px;\n      font-weight: 500;\n      font-style: italic;\n    }\n  }\n  button {\n    cursor: pointer;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Item } from './ContactListItem.styled';\nimport PropTypes from 'prop-types';\nimport { deleteContactThunk } from 'redux/thunk';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  function capitalizeFirstLetter(word) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }\n\n  const contactName = contact.name\n    .toLowerCase()\n    .split(' ')\n    .map(word => capitalizeFirstLetter(word))\n    .join(' ');\n\n  return (\n    <Item>\n      <p>\n        {contactName}:<span>{contact.number}</span>\n      </p>\n      <button\n        type=\"button\"\n        onClick={() => dispatch(deleteContactThunk(contact.id))}\n      >\n        Delete\n      </button>\n    </Item>\n  );\n};\n\nContactListItem.protoTypes = {\n  contact: PropTypes.arrayOf(\n    PropTypes.shape({\n      number: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n};\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacsThunk } from 'redux/thunk';\nimport { isLoggedInSelector, visibleItemsSelector } from 'redux/selectors';\nimport { List } from '@mui/material';\n\nexport const ContactList = () => {\n  const contacts = useSelector(visibleItemsSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(getContacsThunk());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <List\n      sx={theme => ({\n        maxWidth: '600px',\n        width: '100%',\n        paddingBottom: '100px',\n      })}\n    >\n      {contacts.map(contact => (\n        <ContactListItem key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { filter } = useSelector(state => state.filter);\n\n  function handleChange(e) {\n    dispatch(changeFilter(e.target.value));\n  }\n\n  return (\n    <>\n      <TextField\n        sx={{\n          width: '100%',\n          maxWidth: '350px',\n        }}\n        value={filter}\n        onChange={handleChange}\n        label=\"Find contacts by name\"\n      ></TextField>\n    </>\n  );\n};\n","import { Box, Button } from '@mui/material';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Fillter';\nimport { useState } from 'react';\nimport AddIcon from '@mui/icons-material/Add';\n\nfunction ContactsPage() {\n  const [isActivContactForm, setIsActivContactForm] = useState(false);\n\n  return (\n    <>\n      {isActivContactForm && <ContactForm />}\n      <Box\n        sx={{\n          padding: '15px',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          width: '100%',\n          alignItems: 'center',\n          gap: '15px',\n        }}\n      >\n        <Filter />\n        <ContactList />\n      </Box>\n\n      <Button\n        variant=\"contained\"\n        sx={{\n          position: 'fixed',\n          bottom: '40px',\n          right: '40px',\n          borderRadius: '50%',\n          width: '64px',\n          height: '64px',\n        }}\n        onClick={() => setIsActivContactForm(!isActivContactForm)}\n      >\n        <AddIcon color=\"black\" sx={{ fontSize: 40 }} />\n      </Button>\n    </>\n  );\n}\n\nexport default ContactsPage;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","contacts","useSelector","state","handleChange","_ref","target","value","_jsxs","action","onSubmit","e","preventDefault","find","contact","toLowerCase","alert","concat","addContactThunk","currentTarget","reset","children","_jsx","onChange","type","pattern","title","required","Item","ContactListItem","contactName","split","map","word","charAt","toUpperCase","slice","capitalizeFirstLetter","join","onClick","deleteContactThunk","id","protoTypes","PropTypes","ContactList","visibleItemsSelector","isLoggedIn","isLoggedInSelector","useEffect","getContacsThunk","List","sx","theme","maxWidth","width","paddingBottom","Filter","filter","_Fragment","TextField","changeFilter","label","isActivContactForm","setIsActivContactForm","Box","padding","display","flexDirection","height","alignItems","gap","Button","variant","position","bottom","right","borderRadius","AddIcon","color","fontSize","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}