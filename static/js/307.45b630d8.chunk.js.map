{"version":3,"file":"static/js/307.45b630d8.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Fillter.jsx","pages/contacts.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Form = styled.form`\n  border: 2px solid black;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  border-radius: 4px;\n  input {\n    display: flex;\n    justify-content: end;\n    border-radius: 4px;\n    margin-top: 8px;\n    padding: 4px;\n  }\n  input:focus {\n    outline: none;\n    border: 2px solid #5e5eba;\n  }\n  button {\n    width: 100px;\n    padding: 4px;\n    cursor: pointer;\n  }\n`;\n","import { useState } from 'react';\nimport { Form } from './ContactForm.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/thunk';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const { contacts } = useSelector(state => state.contacts);\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContactThunk({ name, number }));\n    reset();\n    e.currentTarget.reset();\n  };\n\n  const handleChange = ({ target }) => {\n    if (target.name === 'name') {\n      setName(target.value);\n    }\n    if (target.name === 'number') {\n      setNumber(target.value);\n    }\n  };\n\n  return (\n    <Form action=\"submit\" onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button>Add contact</button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n};\n","import { styled } from 'styled-components';\n\nexport const Item = styled.li`\n  list-style: none;\n  display: flex;\n  gap: 12px;\n  align-items: center;\n  p {\n    font-weight: 600;\n    span {\n      padding-left: 6px;\n      font-weight: 500;\n      font-style: italic;\n    }\n  }\n  button {\n    cursor: pointer;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Item } from './ContactListItem.styled';\nimport PropTypes from 'prop-types';\nimport { deleteContactThunk } from 'redux/thunk';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      <p>\n        {contact.name}:<span>{contact.number}</span>\n      </p>\n      <button\n        type=\"button\"\n        onClick={() => dispatch(deleteContactThunk(contact.id))}\n      >\n        Delete\n      </button>\n    </Item>\n  );\n};\n\nContactListItem.protoTypes = {\n  contact: PropTypes.arrayOf(\n    PropTypes.shape({\n      number: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacsThunk } from 'redux/thunk';\nimport { isLoggedInSelector, visibleItemsSelector } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(visibleItemsSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(getContacsThunk());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ContactListItem key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterTitle = styled.p`\n  margin: 0;\n  font-size: 18px;\n`;\nexport const Input = styled.input`\n  border-radius: 4px;\n  margin-top: 8px;\n  width: 200px;\n  padding: 4px;\n  &:focus {\n    outline: none;\n    border: 2px solid #5e5eba;\n  }\n  \n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterTitle, Input } from './Filter.styled';\nimport { changeFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { filter } = useSelector(state => state.filter);\n\n  function handleChange(e) {\n    dispatch(changeFilter(e.target.value));\n  }\n\n  return (\n    <>\n      <FilterTitle>Filter contacts by name</FilterTitle>\n      <Input type=\"text\" name=\"filter\" value={filter} onChange={handleChange} />\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Fillter';\n\nfunction ContactsPage() {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n\nexport default ContactsPage;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","contacts","useSelector","state","handleChange","_ref","target","value","_jsxs","action","onSubmit","e","preventDefault","find","contact","toLowerCase","alert","concat","addContactThunk","currentTarget","reset","children","_jsx","onChange","type","pattern","title","required","Item","ContactListItem","onClick","deleteContactThunk","id","protoTypes","PropTypes","List","ContactList","visibleItemsSelector","isLoggedIn","isLoggedInSelector","useEffect","getContacsThunk","map","FilterTitle","Input","_templateObject2","Filter","filter","_Fragment","changeFilter","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}